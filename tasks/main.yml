---

- name: Install NGINX
  yum:
    name: nginx
    state: present
    update_cache: yes

- name: Check DHPARAM
  stat:
    path: /etc/ssl/certs/dhparam.pem
  register: dhparam

- name: Generate DHPARAM
  local_action: command openssl dhparam -out /tmp/dhparam.pem 2048
  become: false
  when: not dhparam.stat.exists

- name: Copy DHPARAM
  copy:
    src: /tmp/dhparam.pem
    dest: /etc/ssl/certs/dhparam.pem
    mode: 0644
  when: not dhparam.stat.exists

- name: Install PIP
  yum:
    name: python3-pip
    state: present
    update_cache: yes

- name: Install CERTBOT
  pip:
    name: "{{ item }}"
  with_items:
  - certbot
  - certbot-nginx

- name: Check for PEM
  stat:
    path: /etc/letsencrypt/live/{{ CERT_DOMAINS | first }}/cert.pem
  register: cert

- name: Generate PEM
  shell: certbot certonly --nginx -d {{ CERT_DOMAINS | join(',') }} --non-interactive --agree-tos -m {{ CERT_EMAIL }} --pre-hook "systemctl stop nginx" --post-hook "nginx -s stop"
  when: not cert.stat.exists

- name: Configure NGINX
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: 0644
  notify:
  - restart nginx

- name: Start NGINX
  systemd:
    name: nginx
    state: started
    enabled: yes
    daemon_reload: yes

- name: Install CRON
  yum:
    name: cronie
    state: present
    update_cache: yes

- name: Start CRON
  systemd:
    name: crond
    state: started
    enabled: yes
    daemon_reload: yes

- name: Configure CRON
  cron:
    name: Certbot renewal.
    job: "certbot renew --no-self-upgrade --quiet"
    minute: "{{ CRON_RENEWAL_MINUTE }}"
    hour: "{{ CRON_RENEWAL_HOUR }}"
